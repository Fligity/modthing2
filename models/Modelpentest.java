// Made with Blockbench 4.0.4
// Exported for Minecraft version 1.15 - 1.16 with Mojang mappings
// Paste this class into your mod and generate all required imports

public static class Modelpentest extends EntityModel<Entity> {
	private final ModelRenderer body;
	private final ModelRenderer rightleg;
	private final ModelRenderer cube2_r1;
	private final ModelRenderer head;
	private final ModelRenderer leftleg;
	private final ModelRenderer cube4_r1;

	public Modelpentest() {
		texWidth = 32;
		texHeight = 32;

		body = new ModelRenderer(this);
		body.setPos(0.0F, 24.0F, 0.0F);
		body.texOffs(0, 0).addBox(-2.0F, -3.0F, -5.0F, 4.0F, 3.0F, 10.0F, 0.0F, false);

		rightleg = new ModelRenderer(this);
		rightleg.setPos(1.8292F, 21.5F, 3.8637F);

		cube2_r1 = new ModelRenderer(this);
		cube2_r1.setPos(0.091F, 2.0F, 0.9166F);
		rightleg.addChild(cube2_r1);
		setRotationAngle(cube2_r1, 0.0F, 0.0F, 0.0F);
		cube2_r1.texOffs(0, 13).addBox(-0.5F, -2.5F, -1.5F, 3.0F, 3.0F, 3.0F, 0.0F, false);

		head = new ModelRenderer(this);
		head.setPos(0.0F, 22.5F, -4.5F);
		head.texOffs(0, 0).addBox(-1.5F, -1.0F, -2.0F, 3.0F, 2.0F, 2.0F, 0.0F, false);

		leftleg = new ModelRenderer(this);
		leftleg.setPos(-1.6736F, 22.5F, 3.5152F);

		cube4_r1 = new ModelRenderer(this);
		cube4_r1.setPos(-1.0F, 0.0F, 2.0F);
		leftleg.addChild(cube4_r1);
		setRotationAngle(cube4_r1, 0.0F, 0.0F, 0.0F);
		cube4_r1.texOffs(12, 13).addBox(-1.5F, -1.5F, -1.5F, 3.0F, 3.0F, 3.0F, 0.0F, false);
	}

	@Override
	public void setupAnim(Entity entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw,
			float headPitch) {
		// previously the render function, render code was moved to a method below
	}

	@Override
	public void renderToBuffer(MatrixStack matrixStack, IVertexBuilder buffer, int packedLight, int packedOverlay,
			float red, float green, float blue, float alpha) {
		body.render(matrixStack, buffer, packedLight, packedOverlay);
		rightleg.render(matrixStack, buffer, packedLight, packedOverlay);
		head.render(matrixStack, buffer, packedLight, packedOverlay);
		leftleg.render(matrixStack, buffer, packedLight, packedOverlay);
	}

	public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {
		modelRenderer.xRot = x;
		modelRenderer.yRot = y;
		modelRenderer.zRot = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
	}
}